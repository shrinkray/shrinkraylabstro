---
import { Icon } from 'astro-icon';
import { twMerge } from 'tailwind-merge';

interface Item {
  title?: string;
  description?: string;
  icon?: string;
  iconClass?: string;
}

export interface Props {
  items?: Array<Item>;
  defaultIcon?: string;
  classes?: Record<string, string>;
}

const { items = [], defaultIcon = '', classes = {} } = Astro.props;

const {
  container: containerClass = 'md:grid-cols-2',
  panel: panelClass = '',
  title: titleClass = '',
  description: descriptionClass = '',
  icon: defaultIconClass = 'text-primary',
} = classes;
---

{
  items && (
    <div class={twMerge('grid mx-auto gap-8', containerClass)}>
      {items.map(({ title, description, icon, iconClass }) => (
        <div>
          <div class={twMerge('flex flex-row max-w-md', panelClass)}>
              <div class="flex justify-center">
                {(icon || defaultIcon) && (
                  <Icon
                    name={icon || defaultIcon}
                    class={twMerge('w-7 h-7 mr-2', defaultIconClass, iconClass)}
                  />
                )}
              </div>
            <div>
              <h3 class={twMerge('text-xl font-bold', titleClass)}>{title}</h3>
              {description && <p class={twMerge("text-muted mt-3", descriptionClass)} set:html={description} />}
            </div>
          </div>
        </div>
      ))}
    </div>
  )
}
