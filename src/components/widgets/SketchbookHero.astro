---
import { Icon } from 'astro-icon';
import { Picture } from '@astrojs/image/components';

interface CallToAction {
  text: string;
  href: string;
  icon?: string;
}

export interface Props {
  title?: string;
  subtitle?: string;
  callToAction?: string | CallToAction;
  callToAction2?: string | CallToAction;
  content?: string;
  image?: string | any; // TODO: find HTMLElementProps
}

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  content = await Astro.slots.render('content'),
  callToAction = await Astro.slots.render('callToAction'),
  callToAction2 = await Astro.slots.render('callToAction2'),
  image = await Astro.slots.render('image'),
} = Astro.props;
---

<section>
	<div class="max-w-6xl mx-auto px-4 sm:px-6">
		<div class="py-12 md:py-6">
		
			
				<div 
					class=" flex flex-row flex-wrap md:flex-nowrap  justify-center relative w-full rounded-md sm:bg-[url('~/assets/images/design-sketchbook-op45.webp')]  sm:dark:bg-slate-200 bg-left bg-fill bg-no-repeat  lg:justify-center col-gap-4 md:py-12"
				>
      <!-- left-side -->
					<div class="md:pl-4 flex flex-col items-center justify-center space-around text-gray-800" >
						<h2 class="font-extrabold text-4xl md:text-5xl dark:text-white sm:dark:text-gray-800 text-center md:text-start">
              <span class="whitespace-nowrap">Accessibility &</span>
              <span class="whitespace-nowrap">UX Engineer</span>
            </h2>
              <p class="mt-4"><span class="text-3xl p-1 bg-violet-800 lg:text-4xl text-white">
							Builder of web UI
              </span></p>
					</div>
      <!-- right side -->
          <div class="flex flex-col  w-full gap-y-4 pr-4 my-8" >
        <!-- Image + (greeting + buttons) -->
            <div class="flex flex-col items-center gap-y-4">

              <div class="flex flex-col items-center justify-center h-24 w-24">
                <Picture
                id="hero-image"
                src={import('~/assets/images/greg-headshot.webp')}
                class="flex  rounded-full border-3 border-slate-700 shadow-xl"
                widths={[100, 100]}
                sizes="(max-width: 3rem)"
                alt=""
                aspectRatio="1:1"
              />
              </div>

              

              <div class="flex flex-col row-gap-4 max-w-prose">
                <p class="inline text-2xl text-center sm:dark:text-gray-800">
                  üëãüèº Hello, everyone! I'm passionate about creating an inclusive and fair digital landscape.
                </p>
              </div>

				    </div>
            <!-- ctas -->
                <div class="flex flex-wrap justify-center gap-y-4 sm:flex-nowrap gap-x-4 sm:gap-y-0 ">
                    {
                    callToAction && (
                      <div class="flex w-auto ">
                        {typeof callToAction === 'string' ? (
                          <Fragment set:html={callToAction} />
                        ) : (
                          <a class="btn btn-primary sm:mb-0 w-full" href={callToAction?.href} target="_blank" rel="noopener" role="button">
                            {callToAction?.icon && (
                              <>
                                <Icon name={callToAction.icon} class="w-5 h-5 mr-1 -ml-1.5" />{' '}
                              </>
                            )}
                            {callToAction?.text}
                          </a>
                        )}
                      </div>
                    )
                  }
                  {
                    callToAction2 && (
                      <div class="flex w-auto m-0">
                        {typeof callToAction2 === 'string' ? (
                          <Fragment set:html={callToAction2} />
                        ) : (
                          <a class="btn w-full dark:hover:bg-violet-400 dark:hover:border-violet-300 dark:hover:text-slate-800 dark:text-white dark:border-4 md:dark:bg-slate-700 md:dark:hover:bg-slate-900 md:dark:hover:text-white" href={callToAction2?.href}>
                            {callToAction2?.icon && (
                              <>
                                <Icon name={callToAction2.icon} class="w-5 h-5 mr-1 -ml-1.5" />{' '}
                              </>
                            )}
                            {callToAction2.text}
                          </a>
                        )}
                      </div>
                    )
                  }
                </div>
        </div>
      </div> 

      <div class="max-w-full text-center mx-auto py-12 md:py-10 flex flex-col gap-y-4">
        {
        title && (
          <h1
            class="text-4xl mb-0 md:text-6xl font-bold  tracking-tighter pb-4 font-heading bg-clip-text text-transparent bg-gradient-to-r from-cyan-500 to-violet-500 dark:from-primary-300 dark:to-secondary-300 flex justify-center items-center"
            set:html={title}
          />
        )
      }
      </div>
			
      <div class="max-w-3xl mx-auto">

        

        <div class="max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4 my-8">
            <p class="text-xl text-muted mb-6 dark:text-slate-100">
                  Shrinkray Labs is a portfolio and blog by Greg Miller, owner of Shrinkray Interactive, LLC. I am focused on
                  inclusive design to build a better web for everyone.
                  <span class="inline sm:hidden">...</span></p>
          </div>

          {subtitle && <p class="text-xl text-center text-muted mb-6 dark:text-slate-300" set:html={subtitle} />}
          
        </div>
        {content && <Fragment set:html={content} />}
     
		</div>
	</div>
</section>

 