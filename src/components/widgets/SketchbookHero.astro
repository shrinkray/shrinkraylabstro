---
import { Icon } from 'astro-icon';
import { Picture } from '@astrojs/image/components';

interface CallToAction {
  text: string;
  href: string;
  icon?: string;
}

export interface Props {
  title?: string;
  subtitle?: string;
  callToAction?: string | CallToAction;
  callToAction2?: string | CallToAction;
  content?: string;
  //image?: string | any; // TODO: find HTMLElementProps
}

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  content = await Astro.slots.render('content'),
  callToAction = await Astro.slots.render('callToAction'),
  callToAction2 = await Astro.slots.render('callToAction2'),
 // image = await Astro.slots.render('image'),
} = Astro.props;
---

<section class="pt-12 pb-20">
	<div class=" mx-auto px-4 sm:px-6">
		
		
			
				<div
					class="flex flex-row flex-wrap lg:flex-nowrap  w-full rounded-lg lg:bg-[url('~/assets/images/design-sketchbook-op45.webp')] bg-cover bg-indigo-50 dark:bg-slate-800 bg-left bg-fill bg-no-repeat  col-gap-4 py-12 lg:align-center lg:justify-center"
				>
        
      <!-- left-side -->
					<div class="flex justify-center items-center lg:justify-end  w-full gap-y-4 pr-4 gap-x-4 my-8 " >
						<div class="flex flex-col max-width-prose">
              <h2 class=" font-extrabold text-center  text-4xl md:text-5xl dark:text-white ">
              <span class="whitespace-nowrap lg:mr-20 xl:mr-0">Accessibility &</span>
              <span class="whitespace-nowrap lg:ml-20 xl:ml-0">UX Engineer</span>
            </h2>
              <p class="mt-4 text-center  text-3xl p-1 dark:text-violet-50 text-violet-900 dark:text-violet-200 md:text-4xl ">Builder of web UI
              </p>
            </div>
					</div>
      <!-- right side -->
          <div class="w-full gap-y-4 pr-4 my-8" >
        <!-- Image + (greeting + buttons) -->
            <div class="flex flex-col items-center gap-y-4">

              <div class="flex flex-col items-center justify-center h-24 w-24">
                <Picture
                id="hero-image"
                src={import('~/assets/images/greg-headshot.webp')}
                class="flex  rounded-full border-3 border-slate-700 shadow-xl"
                widths={[100, 100]}
                sizes="(max-width: 3rem)"
                alt=""
                aspectRatio="1:1"
              />
              </div>

              

              <div class="flex flex-col row-gap-4 max-w-prose">
               <p class="inline text-2xl text-center ">
                  üëãüèº Hello, everyone! I'm passionate about creating an inclusive and fair digital landscape.
                </p>
              </div>

				    </div>
            <!-- ctas -->
                <div class="flex flex-wrap justify-center py-8 gap-y-4 sm:flex-nowrap gap-x-4  ">
                    {
                    callToAction && (
                      <div class="flex w-auto ">
                        {typeof callToAction === 'string' ? (
                          <Fragment set:html={callToAction} />
                        ) : (
                          <a class="btn btn-primary sm:mb-0 w-full" href={callToAction?.href} target="_blank" rel="noopener" role="button">
                            {callToAction?.icon && (
                              <>
                                <Icon name={callToAction.icon} class="w-5 h-5 mr-1 -ml-1.5" />{' '}
                              </>
                            )}
                            {callToAction?.text}
                          </a>
                        )}
                      </div>
                    )
                  }
                  {
                    callToAction2 && (
                      <div class="flex w-auto m-0">
                        {typeof callToAction2 === 'string' ? (
                          <Fragment set:html={callToAction2} />
                        ) : (
                          <a class="btn w-full dark:hover:bg-violet-400 dark:hover:border-violet-300 dark:hover:text-slate-800 dark:text-white 
                          dark:border-4 md:dark:bg-slate-700 md:dark:hover:bg-slate-900 md:dark:hover:text-white" href={callToAction2?.href}>
                            {callToAction2?.icon && (
                              <>
                                <Icon name={callToAction2.icon} class="w-5 h-5 mr-1 -ml-1.5" />{' '}
                              </>
                            )}
                            {callToAction2.text}
                          </a>
                        )}
                      </div>
                    )
                  }
                </div>
        </div>
        
      </div> 

      <div class="max-w-3xl text-center mx-auto  flex flex-col ">
        {
        title && (
          <h1
            class="pt-20 pb-10 text-4xl mb-0 md:text-6xl font-bold  tracking-tighter  font-heading bg-clip-text text-transparent bg-gradient-to-r from-cyan-500 to-violet-500 dark:from-primary-300 dark:to-secondary-300 flex justify-center items-center"
            set:html={title}
          />
        )
      }
       {subtitle && <p class="text-xl text-center text-muted dark:text-slate-300" set:html={subtitle} />}
      </div>
			
      <div class="max-w-3xl mx-auto">


         
          
        </div>
        {content && <Fragment set:html={content} />}
     
		
	</div>
</section>
